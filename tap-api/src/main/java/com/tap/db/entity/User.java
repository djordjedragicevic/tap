/*
 * Created on 2023-06-20 ( 07:13:26 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.0.0
 */
package com.tap.db.entity;

import java.io.Serial;
import java.io.Serializable;
import jakarta.persistence.*;
import java.time.LocalDateTime;
import java.util.List;

/**
 * JPA entity class for "User"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="user", catalog="tap" )
public class User implements Serializable {
	@Serial
	private static final long serialVersionUID = 1L;

	//--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
	private int id ;

	//--- ENTITY DATA FIELDS 
    @Column(name="username", length=32)
	private String username ;

    @Column(name="email", nullable=false, length=128)
	private String email ;

    @Column(name="password", nullable=false, length=128)
	private String password ;

    @Column(name="first_name", length=128)
	private String firstName ;

    @Column(name="last_name", length=128)
	private String lastName ;

    @Column(name="address_id", nullable=false)
	private int addressId ;

    @Column(name="create_date", nullable=false)
	private LocalDateTime createDate ;

    @Column(name="last_login")
	private LocalDateTime lastLogin ;

    @Column(name="active", nullable=false)
	private byte active ;


	//--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany()
	private List<Appointment> appointmentList ; 

    @OneToMany()
	private List<Appointment> appointmentList2 ; 

    @OneToMany(mappedBy="user")
	private List<Employee> employeeList ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="address_id", referencedColumnName="id", insertable=false, updatable=false)
	private Address    address ; 

    @OneToMany(mappedBy="user")
	private List<UserRole> userroleList ; 


	/**
	 * Constructor
	 */
	public User() {
		super();
	}
	
	//--- GETTERS & SETTERS FOR FIELDS
	public void setId( int id ) {
		this.id = id ;
	}
	public int getId() {
		return this.id;
	}

	public void setUsername( String username ) {
		this.username = username ;
	}
	public String getUsername() {
		return this.username;
	}

	public void setEmail( String email ) {
		this.email = email ;
	}
	public String getEmail() {
		return this.email;
	}

	public void setPassword( String password ) {
		this.password = password ;
	}
	public String getPassword() {
		return this.password;
	}

	public void setFirstName( String firstName ) {
		this.firstName = firstName ;
	}
	public String getFirstName() {
		return this.firstName;
	}

	public void setLastName( String lastName ) {
		this.lastName = lastName ;
	}
	public String getLastName() {
		return this.lastName;
	}

	public void setAddressId( int addressId ) {
		this.addressId = addressId ;
	}
	public int getAddressId() {
		return this.addressId;
	}

	public void setCreateDate( LocalDateTime createDate ) {
		this.createDate = createDate ;
	}
	public LocalDateTime getCreateDate() {
		return this.createDate;
	}

	public void setLastLogin( LocalDateTime lastLogin ) {
		this.lastLogin = lastLogin ;
	}
	public LocalDateTime getLastLogin() {
		return this.lastLogin;
	}

	public void setActive( byte active ) {
		this.active = active ;
	}
	public byte getActive() {
		return this.active;
	}

	//--- GETTERS FOR LINKS
	public List<Appointment> getAppointmentList() {
		return this.appointmentList;
	} 

	public List<Appointment> getAppointmentList2() {
		return this.appointmentList2;
	} 

	public List<Employee> getEmployeeList() {
		return this.employeeList;
	} 

	public Address getAddress() {
		return this.address;
	} 

	public List<UserRole> getUserroleList() {
		return this.userroleList;
	} 

	//--- toString specific method
	@Override
 public String toString() { 
  StringBuilder sb = new StringBuilder(); 
  sb.append(id);
  sb.append("|");
  sb.append(username);
  sb.append("|");
  sb.append(email);
  sb.append("|");
  sb.append(password);
  sb.append("|");
  sb.append(firstName);
  sb.append("|");
  sb.append(lastName);
  sb.append("|");
  sb.append(addressId);
  sb.append("|");
  sb.append(createDate);
  sb.append("|");
  sb.append(lastLogin);
  sb.append("|");
  sb.append(active);
  return sb.toString(); 
 } 

}