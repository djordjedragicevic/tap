/*
 * Created on 2023-06-20 ( 07:13:26 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 4.0.0
 */
package com.tap.db.entity;

import java.io.Serial;
import java.io.Serializable;
import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * JPA entity class for "Appointment"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="appointment", catalog="tap" )
public class Appointment implements Serializable {
	@Serial
	private static final long serialVersionUID = 1L;

	//--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
	private long id ;

	//--- ENTITY DATA FIELDS 
    @Column(name="start")
	private LocalDateTime start ;

    @Column(name="end")
	private LocalDateTime end ;

    @Column(name="user_id", nullable=false)
	private int userId ;

    @Column(name="employee_id")
	private Integer employeeId ;

    @Column(name="provider_service_id")
	private Integer providerServiceId ;

    @Column(name="appointment_type_id", nullable=false)
	private byte appointmentTypeId ;

    @Column(name="repeat_type_id")
	private Byte repeatTypeId ;

    @Column(name="created_date", nullable=false)
	private LocalDateTime createdDate ;

    @Column(name="created_by_id", nullable=false)
	private int createdById ;

    @Column(name="appointment_status_id", nullable=false)
	private int appointmentStatusId ;

    @Column(name="status_response_date")
	private LocalDateTime statusResponseDate ;

    @Column(name="comment", length=512)
	private String comment ;


	//--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="appointment_status_id", referencedColumnName="id", insertable=false, updatable=false)
	private AppointmentStatus appointmentstatus ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="appointment_type_id", referencedColumnName="id", insertable=false, updatable=false)
	private AppointmentType appointmenttype ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="employee_id", referencedColumnName="id", insertable=false, updatable=false)
	private Employee   employee ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="provider_service_id", referencedColumnName="id", insertable=false, updatable=false)
	private Service    service ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="repeat_type_id", referencedColumnName="id", insertable=false, updatable=false)
	private RepeatType repeattype ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="user_id", referencedColumnName="id", insertable=false, updatable=false)
	private User       user ; 

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="created_by_id", referencedColumnName="id", insertable=false, updatable=false)
	private User       user2 ; 


	/**
	 * Constructor
	 */
	public Appointment() {
		super();
	}
	
	//--- GETTERS & SETTERS FOR FIELDS
	public void setId( long id ) {
		this.id = id ;
	}
	public long getId() {
		return this.id;
	}

	public void setStart( LocalDateTime start ) {
		this.start = start ;
	}
	public LocalDateTime getStart() {
		return this.start;
	}

	public void setEnd( LocalDateTime end ) {
		this.end = end ;
	}
	public LocalDateTime getEnd() {
		return this.end;
	}

	public void setUserId( int userId ) {
		this.userId = userId ;
	}
	public int getUserId() {
		return this.userId;
	}

	public void setEmployeeId( Integer employeeId ) {
		this.employeeId = employeeId ;
	}
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setProviderServiceId( Integer providerServiceId ) {
		this.providerServiceId = providerServiceId ;
	}
	public Integer getProviderServiceId() {
		return this.providerServiceId;
	}

	public void setAppointmentTypeId( byte appointmentTypeId ) {
		this.appointmentTypeId = appointmentTypeId ;
	}
	public byte getAppointmentTypeId() {
		return this.appointmentTypeId;
	}

	public void setRepeatTypeId( Byte repeatTypeId ) {
		this.repeatTypeId = repeatTypeId ;
	}
	public Byte getRepeatTypeId() {
		return this.repeatTypeId;
	}

	public void setCreatedDate( LocalDateTime createdDate ) {
		this.createdDate = createdDate ;
	}
	public LocalDateTime getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedById( int createdById ) {
		this.createdById = createdById ;
	}
	public int getCreatedById() {
		return this.createdById;
	}

	public void setAppointmentStatusId( int appointmentStatusId ) {
		this.appointmentStatusId = appointmentStatusId ;
	}
	public int getAppointmentStatusId() {
		return this.appointmentStatusId;
	}

	public void setStatusResponseDate( LocalDateTime statusResponseDate ) {
		this.statusResponseDate = statusResponseDate ;
	}
	public LocalDateTime getStatusResponseDate() {
		return this.statusResponseDate;
	}

	public void setComment( String comment ) {
		this.comment = comment ;
	}
	public String getComment() {
		return this.comment;
	}

	//--- GETTERS FOR LINKS
	public AppointmentStatus getAppointmentstatus() {
		return this.appointmentstatus;
	} 

	public AppointmentType getAppointmenttype() {
		return this.appointmenttype;
	} 

	public Employee getEmployee() {
		return this.employee;
	} 

	public Service getService() {
		return this.service;
	} 

	public RepeatType getRepeattype() {
		return this.repeattype;
	} 

	public User getUser() {
		return this.user;
	} 

	public User getUser2() {
		return this.user2;
	} 

	//--- toString specific method
	@Override
 public String toString() { 
  StringBuilder sb = new StringBuilder(); 
  sb.append(id);
  sb.append("|");
  sb.append(start);
  sb.append("|");
  sb.append(end);
  sb.append("|");
  sb.append(userId);
  sb.append("|");
  sb.append(employeeId);
  sb.append("|");
  sb.append(providerServiceId);
  sb.append("|");
  sb.append(appointmentTypeId);
  sb.append("|");
  sb.append(repeatTypeId);
  sb.append("|");
  sb.append(createdDate);
  sb.append("|");
  sb.append(createdById);
  sb.append("|");
  sb.append(appointmentStatusId);
  sb.append("|");
  sb.append(statusResponseDate);
  sb.append("|");
  sb.append(comment);
  return sb.toString(); 
 } 

}